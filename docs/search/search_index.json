{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started This site contains documentation for Foldersync android app. Installation You can get FolderSync by purchasing the app Google Play or on our website . Technical requirements Requires Android 6.0 or newer. Tested to work on phones and tablets with Android OS. Android TV, Android Auto, Chromebook etc. are not officially supported (but might work). Does not require Google Play services to function. Does not require internet connection to function (if you want to sync on internal network).","title":"Getting started"},{"location":"#getting-started","text":"This site contains documentation for Foldersync android app.","title":"Getting started"},{"location":"#installation","text":"You can get FolderSync by purchasing the app Google Play or on our website .","title":"Installation"},{"location":"#technical-requirements","text":"Requires Android 6.0 or newer. Tested to work on phones and tablets with Android OS. Android TV, Android Auto, Chromebook etc. are not officially supported (but might work). Does not require Google Play services to function. Does not require internet connection to function (if you want to sync on internal network).","title":"Technical requirements"},{"location":"changelog/","text":"Changelog For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Changelog"},{"location":"changelog/#changelog","text":"For full documentation visit mkdocs.org .","title":"Changelog"},{"location":"changelog/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"changelog/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"faq/","text":"Misc How do I migrate/move settings? Create a database backup in the settings menu. Then choose restore database to import settings in another app - this will overwrite existing settings so beware. That's its. This will work between lite and pro version as well. On Android 11 /Android/data folder can no longer be accessed, why? Android 11 has new file permission requirements and has restricted access to certain folders, like the data folder. It may be possible to add a specific Storage Access Framework permission on permissions screen to allow access to this folder, but unfortunately this will not work on all devices and may stop working completely in the future if Google wants it to. Note: Built-in vendor file managers can still access protected folders in some cases. Why are my transfer speeds slow? Transfer speeds can be slow for many reasons and can vary from device to device. FTPS/SFTP speeds can potentially be increased by disabling compression, since this limits how much data can be sent by how fast the CPU can compress the data. The speed of the memory card can also influence transfer speeds of course. Transfer speeds have been compared to other popular file managers and they are comparable on the devices we test on, but we are aware that users on some device experience lower speeds. Why can't FolderSync be moved to the SD card? Unfortunately this feature will not be enabled, since it can cause scheduled syncs not to work and then a lot of users will probably complain. :-) However, if you have a rooted phone you can use this tool to move any app to SD: https://market.android.com/details?id=com.leinardi.setinstalllocation Just as long as you know that doing so may cause scheduled syncs not to work correctly. How do I use Tasker to run a sync in FolderSync? First of all the full version is required. The full version works as a Tasker plugin - when you configure a new task in Tasker you are presented with a number of Action categories, one of these being \"Plugin\". Select this and then select \"FolderSync\" plugin action. Then press edit and select the folderpair you wish to start syncing with this task is executed by Tasker. Then save the task as you normally would in Tasker. For a more general introduction to tasker go here: http://tasker.dinglisch.net/faq.html HTTPS connection errors This can happen on newer Android devices, since deprecated encryption ciphers are no longer enabled by default with OkHttp/Android to increase security. This means, if you are connecting to an insecure web server using WebDAV or ownCloud, the connection may fail. You can either upgrade your server or try to enable self-signed certificates for you WebDAV/ownCloud account. See here which protocols/ciphers are supported on which Android versions: https://developer.android.com/reference/javax/net/ssl/SSLEngine.htm How do I fix getting stuck on web page when trying to authenticate account? When using external browser or custom Chrome tab to authenticate Google Drive or other OAuth supported cloud providers some can get stuck on the web page that gets redirected to. The cause of this is the app is not opened as it should when the https://www.tacit.dk/oauth-return url is loaded. To remedy this please ensure you are using Chrome as your default browser and it is the latest version. Also try to clear defaults for Chrome if still not working. How can I access internal SD card, external SD card and USB OTG drive? To be able to access internal and external SD card, USB OTG and Android/data folder the the necessary permissions must be granted to the app. You do this on the permissions screen that can be opened on about page (right-most option in the bottom menu). It will display which permissions are required by the app and the status of these - and most importantly give you an option to grant the permissions, if they are missing. Its also important to note, that if you change your SD card, you must regrant permissions for that SD card to FolderSync or the new SD card won't have write access. You must do this everytime you change SD card, no matter if a SD card has been previously granted permissions. If you decided FolderSync should no longer have write access to external SD card, you can revoke its permissions in settings.","title":"Misc"},{"location":"faq/#misc","text":"","title":"Misc"},{"location":"faq/#how-do-i-migratemove-settings","text":"Create a database backup in the settings menu. Then choose restore database to import settings in another app - this will overwrite existing settings so beware. That's its. This will work between lite and pro version as well.","title":"How do I migrate/move settings?"},{"location":"faq/#on-android-11-androiddata-folder-can-no-longer-be-accessed-why","text":"Android 11 has new file permission requirements and has restricted access to certain folders, like the data folder. It may be possible to add a specific Storage Access Framework permission on permissions screen to allow access to this folder, but unfortunately this will not work on all devices and may stop working completely in the future if Google wants it to. Note: Built-in vendor file managers can still access protected folders in some cases.","title":"On Android 11 /Android/data folder can no longer be accessed, why?"},{"location":"faq/#why-are-my-transfer-speeds-slow","text":"Transfer speeds can be slow for many reasons and can vary from device to device. FTPS/SFTP speeds can potentially be increased by disabling compression, since this limits how much data can be sent by how fast the CPU can compress the data. The speed of the memory card can also influence transfer speeds of course. Transfer speeds have been compared to other popular file managers and they are comparable on the devices we test on, but we are aware that users on some device experience lower speeds.","title":"Why are my transfer speeds slow?"},{"location":"faq/#why-cant-foldersync-be-moved-to-the-sd-card","text":"Unfortunately this feature will not be enabled, since it can cause scheduled syncs not to work and then a lot of users will probably complain. :-) However, if you have a rooted phone you can use this tool to move any app to SD: https://market.android.com/details?id=com.leinardi.setinstalllocation Just as long as you know that doing so may cause scheduled syncs not to work correctly.","title":"Why can't FolderSync be moved to the SD card?"},{"location":"faq/#how-do-i-use-tasker-to-run-a-sync-in-foldersync","text":"First of all the full version is required. The full version works as a Tasker plugin - when you configure a new task in Tasker you are presented with a number of Action categories, one of these being \"Plugin\". Select this and then select \"FolderSync\" plugin action. Then press edit and select the folderpair you wish to start syncing with this task is executed by Tasker. Then save the task as you normally would in Tasker. For a more general introduction to tasker go here: http://tasker.dinglisch.net/faq.html","title":"How do I use Tasker to run a sync in FolderSync?"},{"location":"faq/#https-connection-errors","text":"This can happen on newer Android devices, since deprecated encryption ciphers are no longer enabled by default with OkHttp/Android to increase security. This means, if you are connecting to an insecure web server using WebDAV or ownCloud, the connection may fail. You can either upgrade your server or try to enable self-signed certificates for you WebDAV/ownCloud account. See here which protocols/ciphers are supported on which Android versions: https://developer.android.com/reference/javax/net/ssl/SSLEngine.htm","title":"HTTPS connection errors"},{"location":"faq/#how-do-i-fix-getting-stuck-on-web-page-when-trying-to-authenticate-account","text":"When using external browser or custom Chrome tab to authenticate Google Drive or other OAuth supported cloud providers some can get stuck on the web page that gets redirected to. The cause of this is the app is not opened as it should when the https://www.tacit.dk/oauth-return url is loaded. To remedy this please ensure you are using Chrome as your default browser and it is the latest version. Also try to clear defaults for Chrome if still not working.","title":"How do I fix getting stuck on web page when trying to authenticate account?"},{"location":"faq/#how-can-i-access-internal-sd-card-external-sd-card-and-usb-otg-drive","text":"To be able to access internal and external SD card, USB OTG and Android/data folder the the necessary permissions must be granted to the app. You do this on the permissions screen that can be opened on about page (right-most option in the bottom menu). It will display which permissions are required by the app and the status of these - and most importantly give you an option to grant the permissions, if they are missing. Its also important to note, that if you change your SD card, you must regrant permissions for that SD card to FolderSync or the new SD card won't have write access. You must do this everytime you change SD card, no matter if a SD card has been previously granted permissions. If you decided FolderSync should no longer have write access to external SD card, you can revoke its permissions in settings.","title":"How can I access internal SD card, external SD card and USB OTG drive?"},{"location":"faq/drive/","text":"Google Drive Exisisting account not working Please try to re-authenticate account or if that fails re-add Google Drive account and update FolderPairs to use newly added account. Some old API keys used by FolderSync can no longer be used, so adding a new account can unfortunately be required. Browser authentication issue If you have issues authenticating, please ensure Chrome browser is installed and it is the default browser. If issue persist try clearing data for Chrome browser in Android App settings. Firefox has also been reported by some users to work. Simple browsers on app store that use an internal standard WebView with not be able to work with the security measures Google is enforcing. Syncing to a shared folder If you want to sync to a folder somebody has shared with you, you need to add it it your drive. This can be done in the Google Drive browser interface. 1. Open the \"Shared with me\" section. 2. Click a folder or files to be added to another location. (it will be highlighted) 3. Press down \"Shift + Z\" 4. Choose a location in a dialog box.","title":"Google Drive"},{"location":"faq/drive/#google-drive","text":"","title":"Google Drive"},{"location":"faq/drive/#exisisting-account-not-working","text":"Please try to re-authenticate account or if that fails re-add Google Drive account and update FolderPairs to use newly added account. Some old API keys used by FolderSync can no longer be used, so adding a new account can unfortunately be required.","title":"Exisisting account not working"},{"location":"faq/drive/#browser-authentication-issue","text":"If you have issues authenticating, please ensure Chrome browser is installed and it is the default browser. If issue persist try clearing data for Chrome browser in Android App settings. Firefox has also been reported by some users to work. Simple browsers on app store that use an internal standard WebView with not be able to work with the security measures Google is enforcing.","title":"Browser authentication issue"},{"location":"faq/drive/#syncing-to-a-shared-folder","text":"If you want to sync to a folder somebody has shared with you, you need to add it it your drive. This can be done in the Google Drive browser interface. 1. Open the \"Shared with me\" section. 2. Click a folder or files to be added to another location. (it will be highlighted) 3. Press down \"Shift + Z\" 4. Choose a location in a dialog box.","title":"Syncing to a shared folder"},{"location":"faq/ftp/","text":"FTP TLS session resumption for FTP FolderSync only support this for EdtFTPj/Pro engine. If using Bitvise FTP server there may be incompatability, it is then recommende to use SFTP instead.","title":"FTP"},{"location":"faq/ftp/#ftp","text":"","title":"FTP"},{"location":"faq/ftp/#tls-session-resumption-for-ftp","text":"FolderSync only support this for EdtFTPj/Pro engine. If using Bitvise FTP server there may be incompatability, it is then recommende to use SFTP instead.","title":"TLS session resumption for FTP"},{"location":"faq/googleplay/","text":"Google Play Do I need to buy Premium/Pro version again on a new device? No, the premium upgrade or pro purchase is tied to your Google account. Just use the same account on Google Play on the new device, and your previous purchase will be recognized. Buying Premium in-app purchase in FolderSync doesn't give access to FolderSync Pro but unlocks the free version to be identical to the pro version in every way. How do I get a refund? We can offer refund up to 72 hours after purchase or if your premium upgrade is not recognized and you want to cancel it or buy the pro version instead. We can also offer refund if you want to transfer license to new Google account, but some old purchases may for various reasons not be refundable in the Google Play console so we cannot guarantee this. Please see this link for further details: https://goo.gl/forms/e21sKHBkVXaqBnE92 Why can I not get Pro version when I have purchased premium upgrade? The premium upgrade in the free version of FolderSync unlocks it to be identical to FolderSync Pro, but it doesn't enable download of pro version as its a different app on Google Play and the Pro version can only be downloaded if bought directly. If you have issues getting your premium purchase recognoized and want to cancel buy pro version instead, please request a refund. Why can I download the free version, but not be able to buy the pro version? There can be many reasons for this. Some countries like China are not supported by Goggle Play. Another reason can be that the device is not valid, because it doesn't follow Google guidelines. Note that FolderSync is not restricted from any devices or countries by our doing. There are several steps you can take to try to remedy the situation. Try using market enabler or similar tools: https://market.android.com/details?id=ch.racic.android.marketenabler&feature=search_result For people with MIUI rom (and possible others with custom roms): http://miuiandroid.com/forums/showthread.php?7779-Protected-apps-in-the-market-shown-as-not-compatible Problems with your purchase on Google Play? Sadly any problems with Google Play is outside our control. You will have to ask Google for support. If you can't download a purchased app, try again a little later or try restarting your device, then it usually works. A few users simply can't purchase apps, and they continually get \"Internal market error\". If you think you have accidentally purchased the app twice, then please check the billing statements. One of them will probably say cancelled and that no charge has been performed, so there is no need to contact support for a refund.","title":"Google Play"},{"location":"faq/googleplay/#google-play","text":"","title":"Google Play"},{"location":"faq/googleplay/#do-i-need-to-buy-premiumpro-version-again-on-a-new-device","text":"No, the premium upgrade or pro purchase is tied to your Google account. Just use the same account on Google Play on the new device, and your previous purchase will be recognized. Buying Premium in-app purchase in FolderSync doesn't give access to FolderSync Pro but unlocks the free version to be identical to the pro version in every way.","title":"Do I need to buy Premium/Pro version again on a new device?"},{"location":"faq/googleplay/#how-do-i-get-a-refund","text":"We can offer refund up to 72 hours after purchase or if your premium upgrade is not recognized and you want to cancel it or buy the pro version instead. We can also offer refund if you want to transfer license to new Google account, but some old purchases may for various reasons not be refundable in the Google Play console so we cannot guarantee this. Please see this link for further details: https://goo.gl/forms/e21sKHBkVXaqBnE92","title":"How do I get a refund?"},{"location":"faq/googleplay/#why-can-i-not-get-pro-version-when-i-have-purchased-premium-upgrade","text":"The premium upgrade in the free version of FolderSync unlocks it to be identical to FolderSync Pro, but it doesn't enable download of pro version as its a different app on Google Play and the Pro version can only be downloaded if bought directly. If you have issues getting your premium purchase recognoized and want to cancel buy pro version instead, please request a refund.","title":"Why can I not get Pro version when I have purchased premium upgrade?"},{"location":"faq/googleplay/#why-can-i-download-the-free-version-but-not-be-able-to-buy-the-pro-version","text":"There can be many reasons for this. Some countries like China are not supported by Goggle Play. Another reason can be that the device is not valid, because it doesn't follow Google guidelines. Note that FolderSync is not restricted from any devices or countries by our doing. There are several steps you can take to try to remedy the situation. Try using market enabler or similar tools: https://market.android.com/details?id=ch.racic.android.marketenabler&feature=search_result For people with MIUI rom (and possible others with custom roms): http://miuiandroid.com/forums/showthread.php?7779-Protected-apps-in-the-market-shown-as-not-compatible","title":"Why can I download the free version, but not be able to buy the pro version?"},{"location":"faq/googleplay/#problems-with-your-purchase-on-google-play","text":"Sadly any problems with Google Play is outside our control. You will have to ask Google for support. If you can't download a purchased app, try again a little later or try restarting your device, then it usually works. A few users simply can't purchase apps, and they continually get \"Internal market error\". If you think you have accidentally purchased the app twice, then please check the billing statements. One of them will probably say cancelled and that no charge has been performed, so there is no need to contact support for a refund.","title":"Problems with your purchase on Google Play?"},{"location":"faq/pcloud/","text":"PCloud Browser authentication issue? If you have issues authenticating, please ensure Chrome browser is installed and it is the default browser. If issue persist try clearing data for Chrome browser in Android App settings. Firefox has also been reported by some users to work. Simple browsers on app store that use an internal standard WebView with not be able to work with the security measures Google is enforcing. If using PCloud on EU server the redirect when authenticating in browser needs to work - manually entering code will not work.","title":"PCloud"},{"location":"faq/pcloud/#pcloud","text":"","title":"PCloud"},{"location":"faq/pcloud/#browser-authentication-issue","text":"If you have issues authenticating, please ensure Chrome browser is installed and it is the default browser. If issue persist try clearing data for Chrome browser in Android App settings. Firefox has also been reported by some users to work. Simple browsers on app store that use an internal standard WebView with not be able to work with the security measures Google is enforcing. If using PCloud on EU server the redirect when authenticating in browser needs to work - manually entering code will not work.","title":"Browser authentication issue?"},{"location":"faq/s3/","text":"Amazon S3 Why do I get sync errors when my Amazon S3 bucket name has a period in it? Unfortunately bucket names with periods (.) in them is no longer supported by the Amazon API. This is because it results in SSL certificate errors when the Amazon server is accessed by an url like https://some.bucket.name.s3.amazonaws.com. I recommend the period character is replaced by a dash or other legal domain name character.","title":"Amazon S3"},{"location":"faq/s3/#amazon-s3","text":"","title":"Amazon S3"},{"location":"faq/s3/#why-do-i-get-sync-errors-when-my-amazon-s3-bucket-name-has-a-period-in-it","text":"Unfortunately bucket names with periods (.) in them is no longer supported by the Amazon API. This is because it results in SSL certificate errors when the Amazon server is accessed by an url like https://some.bucket.name.s3.amazonaws.com. I recommend the period character is replaced by a dash or other legal domain name character.","title":"Why do I get sync errors when my Amazon S3 bucket name has a period in it?"},{"location":"faq/scheduling/","text":"Scheduleding Why don't my scheduled sync run? There can be many reasons for this, most common that battery optimization is enabled for FolderSync (you will need to excluded it for scheduling to work properly). If you have the app installed on SD card, the scheduler will not be set on boot up of the device because of limitations in the Android OS. This is why FolderSync from version 1.7.0 on will have its install location set to \"internalOnly\". Otherwise it will mean scheduled syncs will not run until you have started FolderSync at least once. Another reason can be that the connection type is not allowed for the folderpair that is scheduled to sync, or some other condition is not met. You can also try enabling \"Use full wakelock\" in settings - some devices require this setting to be enabled or they will not wake correctly. Battery optimization Most common issue is that the Android OS is battery optimizing the FolderSync process so it cant run scheduled sync. To ensure sync can occur in background, disable any battery optimization for FolderSync in Android settings. WiFi SSID not detected Scheduled sync can be broken if Wifi SSID is not detected and you configured a SSID filter on folderPair connection settings - if you need FolderSync to detect SSID, please allow it background access to location on newer versions of Android. If you already gave permission to only allow while app is in use, you have to go to Android app settings for FolderSync and give location permission again for background use. If you don't wan't to do that, remove SSID filter configuration on folderpair. Wifi doesn't turn on Unfortunately Android no longer allows turning on WiFi for apps targeting Android 10. Instant sync issues On Android 6.x/7.x instant sync functionality will not work for most devices for external SD card. This is an Android bug or perhaps a new undocumented limitation by Google. Nothing we can do about it unfortunately.","title":"Scheduling issues"},{"location":"faq/scheduling/#scheduleding","text":"","title":"Scheduleding"},{"location":"faq/scheduling/#why-dont-my-scheduled-sync-run","text":"There can be many reasons for this, most common that battery optimization is enabled for FolderSync (you will need to excluded it for scheduling to work properly). If you have the app installed on SD card, the scheduler will not be set on boot up of the device because of limitations in the Android OS. This is why FolderSync from version 1.7.0 on will have its install location set to \"internalOnly\". Otherwise it will mean scheduled syncs will not run until you have started FolderSync at least once. Another reason can be that the connection type is not allowed for the folderpair that is scheduled to sync, or some other condition is not met. You can also try enabling \"Use full wakelock\" in settings - some devices require this setting to be enabled or they will not wake correctly.","title":"Why don't my scheduled sync run?"},{"location":"faq/scheduling/#battery-optimization","text":"Most common issue is that the Android OS is battery optimizing the FolderSync process so it cant run scheduled sync. To ensure sync can occur in background, disable any battery optimization for FolderSync in Android settings.","title":"Battery optimization"},{"location":"faq/scheduling/#wifi-ssid-not-detected","text":"Scheduled sync can be broken if Wifi SSID is not detected and you configured a SSID filter on folderPair connection settings - if you need FolderSync to detect SSID, please allow it background access to location on newer versions of Android. If you already gave permission to only allow while app is in use, you have to go to Android app settings for FolderSync and give location permission again for background use. If you don't wan't to do that, remove SSID filter configuration on folderpair.","title":"WiFi SSID not detected"},{"location":"faq/scheduling/#wifi-doesnt-turn-on","text":"Unfortunately Android no longer allows turning on WiFi for apps targeting Android 10.","title":"Wifi doesn't turn on"},{"location":"faq/scheduling/#instant-sync-issues","text":"On Android 6.x/7.x instant sync functionality will not work for most devices for external SD card. This is an Android bug or perhaps a new undocumented limitation by Google. Nothing we can do about it unfortunately.","title":"Instant sync issues"},{"location":"faq/sftp/","text":"SFTP I can not login to my SFTP server FolderSync uses the sshj library for SFTP. Please ensure your server algorithms are supported and key files are supported. https://github.com/hierynomus/sshj I get a \"Received message is too long: 1416128878\" error with SFTP. Why? This seems to be a problem with the server. It responds with something the FolderSync doesn't understand. See detailed answer below: When I try to use sftp or scp2, I get a message like this: Received message too long (or \"Bad packet length\") 1416586337 and the connection fails. What's wrong? \"In order for this to work, the SSH session must be \"clean\" \u2014 that is, it must have on it only information transmitted by the programs at either end. What often happens, though, is that there are statements in either the system or per-user shell startup files on the server (.bashrc,.profile,/etc/csh.cshrc,.login, etc.) which output text messages on login, intended to be read by humans (likefortune,echo \"Hi there!\", etc.). Such code should only produce output on interactive logins, when there is a tty attached to standard input. If it does not make this test, it will insert these text messages where they don't belong: in this case, polluting the protocol stream between scp2/sftp and sftp-server. The first four bytes of the text gets interpreted as a 32-bit packet length, which will usually be a wildly large number, provoking the error message above\" Taken from here: http://www.snailbook.com/faq/sftp-corruption.auto.html So you need to modify the SFTP server in some way, so that it doesn't send back plain text. Login with private key file doesnt work Please ensure file is in one of the following formats: pkcs5, pkcs8, openssh-key-v1, ssh-rsa-cert-v01@openssh.com, ssh-dsa-cert-v01@openssh.com","title":"SFTP"},{"location":"faq/sftp/#sftp","text":"","title":"SFTP"},{"location":"faq/sftp/#i-can-not-login-to-my-sftp-server","text":"FolderSync uses the sshj library for SFTP. Please ensure your server algorithms are supported and key files are supported. https://github.com/hierynomus/sshj","title":"I can not login to my SFTP server"},{"location":"faq/sftp/#i-get-a-received-message-is-too-long-1416128878-error-with-sftp-why","text":"This seems to be a problem with the server. It responds with something the FolderSync doesn't understand. See detailed answer below: When I try to use sftp or scp2, I get a message like this: Received message too long (or \"Bad packet length\") 1416586337 and the connection fails. What's wrong? \"In order for this to work, the SSH session must be \"clean\" \u2014 that is, it must have on it only information transmitted by the programs at either end. What often happens, though, is that there are statements in either the system or per-user shell startup files on the server (.bashrc,.profile,/etc/csh.cshrc,.login, etc.) which output text messages on login, intended to be read by humans (likefortune,echo \"Hi there!\", etc.). Such code should only produce output on interactive logins, when there is a tty attached to standard input. If it does not make this test, it will insert these text messages where they don't belong: in this case, polluting the protocol stream between scp2/sftp and sftp-server. The first four bytes of the text gets interpreted as a 32-bit packet length, which will usually be a wildly large number, provoking the error message above\" Taken from here: http://www.snailbook.com/faq/sftp-corruption.auto.html So you need to modify the SFTP server in some way, so that it doesn't send back plain text.","title":"I get a \"Received message is too long: 1416128878\" error with SFTP. Why?"},{"location":"faq/sftp/#login-with-private-key-file-doesnt-work","text":"Please ensure file is in one of the following formats: pkcs5, pkcs8, openssh-key-v1, ssh-rsa-cert-v01@openssh.com, ssh-dsa-cert-v01@openssh.com","title":"Login with private key file doesnt work"},{"location":"faq/smb/","text":"SMB How to connnect to SMB? Please ensure you are using correct protocol SMB1, SMB2 or SMB3. SMB1 is deprecated and not by default enabled in many newer OS versions etc. FolderSync uses jcifs for SMB1 and smbj for SMB2/3 and should be compaible with all SMB server that work with these libraries. For SMB2/3 ensure share name is entered correctly. FolderSync does not have the ability to browse shares, so the share name must be configured correctly for connection to succeed. Error when connecting to SMB (Samba) on linux or NAS? FolderSync uses the smbj library for SMB access. If you are connecting to Samba server (used by many NAS also) and you are connecting without username/password, it may cause issues. Please ensure a username/password is provided. Syncing files ending with dot (.) fails when uploading to SMB server? Unfortunately this is an issue with many SMB servers and/or widows, they do not accept files ending with dot. The issue is not the missing extension, but the ending dot.","title":"SMB"},{"location":"faq/smb/#smb","text":"","title":"SMB"},{"location":"faq/smb/#how-to-connnect-to-smb","text":"Please ensure you are using correct protocol SMB1, SMB2 or SMB3. SMB1 is deprecated and not by default enabled in many newer OS versions etc. FolderSync uses jcifs for SMB1 and smbj for SMB2/3 and should be compaible with all SMB server that work with these libraries. For SMB2/3 ensure share name is entered correctly. FolderSync does not have the ability to browse shares, so the share name must be configured correctly for connection to succeed.","title":"How to connnect to SMB?"},{"location":"faq/smb/#error-when-connecting-to-smb-samba-on-linux-or-nas","text":"FolderSync uses the smbj library for SMB access. If you are connecting to Samba server (used by many NAS also) and you are connecting without username/password, it may cause issues. Please ensure a username/password is provided.","title":"Error when connecting to SMB (Samba) on linux or NAS?"},{"location":"faq/smb/#syncing-files-ending-with-dot-fails-when-uploading-to-smb-server","text":"Unfortunately this is an issue with many SMB servers and/or widows, they do not accept files ending with dot. The issue is not the missing extension, but the ending dot.","title":"Syncing files ending with dot (.) fails when uploading to SMB server?"},{"location":"faq/sync/","text":"Sync How do I avoid conflicts when configuring a new folderpair where both folders already contains all the files? If a file that has not been synced before by FolderSync, exists both locally and remote when syncing and the two corresponding files do not have an identical modified timestamp, then you will get a conflict error for the files. The same conflict will happen for a file that has been previously synced, when both the local and remote file has changed since last sync (both files get updated by your or another app with new timestamps and perhaps new content). To eliminate this conflict when configuring a folderPair for the first time, and you KNOW the files are identical, you can set \"FolderPair -> Sync option -> If both local and remote file are modified\" option to \"Assume files are identical\". Only do this as a temporary thing for the first sync and only if you are 100% sure the files in both local and remote folder are indeed identical. Why does instant sync not work? This feature works only for local files device. When enabled, local file changes will be detected in the device folder, and a immediate partial sync will be attempted if other folderpair conditions allow this, such as network settings. Some custom ROMs may not support this. Newer versions of Android may not support this feature on external SD cards, since it appears folder/file change events are not propogated to apps properly. What is the conflict setting and how does it work? When syncing a conflict can occur when both the local and the remote file has been modified since the last sync. You then have four options: to skip the file, to use the newest file or to use either the local or the remote file. A conflict gets detected when both the local and remote modified time stamp for the file has changed since last sync - FolderSync could then of course just use the newest file, but then what if you had made some changes to the \"older\" file, that you wanted to save? A conflict will not be detected in cases where the modified time stamp is within the threshold for modified time stamp bug fix setting Why do files sometimes get transferred even if they haven't changes? There is some kind of bug on some Android versions, where timestamps of files change independently of Foldersync, even if they haven't changed. It could be caused by media scanning the SD card, remounting or rebooting or perhaps issues with timezones but we do not know for sure. We don't have the problem on our test devices, and currently only a small subset of users have this problem. We are looking into handling this issue using md5 checksum to see if local files have changed before they are synced again. Look for it in a future release. If the timestamp of a remote file change, for whatever reason, even if the file is unchanged, then FolderSync will not be able to detect it and the file may be retransferrred. Why is there no overall sync progress shown? FolderSync's current sync engine progresses through the folder structure of the remote and local folders as they sync runs, and process each folder on its own. FolderSync doesn't know how many sub folders and files that may remain to be synced in folders not yet processed. It is perhaps possible to list all files/folders before syncing of changed files starts, but it may still take a long time to calculate this because it can depend on 1000's of web requests for large folder structures, and when no files are synced, this is essentially what happens anyway. Think about it like this: if you run a sync where no files are transferred, the time that the sync needs to run, is the same time as is needed to calculate the number files to be synced (if there had been any). So it doesn't make sense to show progress for syncs's where no files are transferred (because when the calculation is ready, the sync has completed). A future version of FolderSync may include a updated sync engine, where this calculation is done, and all files are transferred at the end of the sync. Then it will be possible to show how many file transfers remain in sync. When are modification timestamps for files updated? Generally modified time stamp for a file is set on download and upload, not at any other time. However not all cloud providers or protocols support setting modified time stamp of uploaded files, so images that is uploaded may get a newer modified time stamp than on the device etc.. This table will illustrate which providers and protocols support setting the modification time stamp for an uploaded file: Provider/protocol Modification time stamp preserved Amazon S3 No Box No Dropbox No FTP Yes (if supported by server) Google Docs No Google Drive Yes NetDocuments No SFTP Yes (if supported by server) OneDrive No SMB/Cifs Yes (if supported by server) SugarSync No Ubuntu One No WebDAV No Why are my files not being synced correctly? This answer will try to address a range of common reasons why your files may not sync as you thought they would: If subfolders or some files are not syncing at all - make sure sync of subfolders is enabled. Also check if the files or folders not marked as hidden (in Google Docs this will happen if you choose to hide items from being shown in \"home\"). If so, enable sync of hidden files. Also make sure items are not excluded because of a sync filter. Connections - make sure the allowed connection type is enabled at the time the sync should run or else the folderpair will not be synced at all. FTP/FTPES - if you have problems with FTP syncing, please try the legacy option first before contacting support. Special characters in file names - please use universal acceptable file characters in file and folder names. Some good recommendations can be found here: http://www.mtu.edu/umc/services/web/resources/cms/characters-to-avoid.html Box doesn't accept file names or folders that start with a dot \".\". FolderSync doesn't delete removed files in a two-way sync. Why? FolderSync has a fairly simple sync engine, meaning that FolderSync doesn't store state for each individual file. Thus the only information it knows about a file is what it knows at the time of the sync. Thus, if you delete a previously synced file for a two-way sync folderpair on either the local or remote end, this file will be resynced, because FolderSync sees this a an unsynced file. This is intentional. Note: From version 1.4.0 on FolderSync support deletions in two-way sync. FolderSync overwrite changes in my local/remote file and uses the oldest file? This can only happen if the rule \"overwrite always\" is used, or if you are experiencing the Android OS bug mentioned in the next question. If \"overwrite always\" is not set, FolderSync will never overwrite the newest file - but the bug mentioned results in the newest file having an older timestamp. See below for more details. FolderSync sometimes sync files that haven't changed. Why? FolderSync compares the lastmodified timestamps on the local and the remote file when the option to overwrite older files in a folderpair is set. If the targetfile is older, it is overwritten by the sourcefile. AmazonS3 and Dropbox don't have any support for setting the timestamps of uploaded files, so when a file is uploaded to one of these services, FolderSync attempts to set the timestamp on the local file, to ensure the timestamps are in sync. Likewise when a file is downloaded, the timestamp of the localfile is set to that of the file in Dropbox or Amazon S3. This ensures, that on the next sync check FolderSync will see the files as identical. However, on some Android devices there is a bug in the operating system that makes setting the timestamp of the local file fail. Thus, at the next sync check, typcially when using two-way sync, FolderSync sees that the cloud and local file have different timestamps, and thus syncs the file again. This will then happen every time. From version 1.4.0 on the local and remote timestamp are stored in a database, and used for comparison at next sync. Along with an user configurable option to to ignore a timestamp difference, this should eliminate the resyncing problem. For information regarding the Android OS bug see these references: http://code.google.com/p/android/issues/detail?id=15480 http://code.google.com/p/android/issues/detail?id=1699 Even the official Dropbox app has the same problem: http://forums.dropbox.com/topic.php?id=22437 Sync failing because of file conflicts If a file that has not been synced before, exists both locally and remote when syncing, and the two corresponding files do not have an identical modified timestamp, you will get a conflict. The same conflict will happen for a file that has been previously synced, if both the local and remote file changes since last sync (gets updated with a new timestamp and perhaps new content, by other applications or you). You can configure the folderpair to use the overwrite oldest file in such a case using the conflict setting under FolderPair->Advanced. The remote and local file may be identical, other than the timestamp, but FolderSync can not verify this without overwriting one of them with the other, since a file-hash of the remote file is often not available. Bad request errors or failing folderpairs Please try to re-authenticate account. In some cases you also need to re-select to remote folder for folderpairs, since the path structure on the remote end has changed because of usages of new API versions. Just re-select the folder you are already using, so the remote folder info can be refreshed.","title":"Sync issues"},{"location":"faq/sync/#sync","text":"","title":"Sync"},{"location":"faq/sync/#how-do-i-avoid-conflicts-when-configuring-a-new-folderpair-where-both-folders-already-contains-all-the-files","text":"If a file that has not been synced before by FolderSync, exists both locally and remote when syncing and the two corresponding files do not have an identical modified timestamp, then you will get a conflict error for the files. The same conflict will happen for a file that has been previously synced, when both the local and remote file has changed since last sync (both files get updated by your or another app with new timestamps and perhaps new content). To eliminate this conflict when configuring a folderPair for the first time, and you KNOW the files are identical, you can set \"FolderPair -> Sync option -> If both local and remote file are modified\" option to \"Assume files are identical\". Only do this as a temporary thing for the first sync and only if you are 100% sure the files in both local and remote folder are indeed identical.","title":"How do I avoid conflicts when configuring a new folderpair where both folders already contains all the files?"},{"location":"faq/sync/#why-does-instant-sync-not-work","text":"This feature works only for local files device. When enabled, local file changes will be detected in the device folder, and a immediate partial sync will be attempted if other folderpair conditions allow this, such as network settings. Some custom ROMs may not support this. Newer versions of Android may not support this feature on external SD cards, since it appears folder/file change events are not propogated to apps properly.","title":"Why does instant sync not work?"},{"location":"faq/sync/#what-is-the-conflict-setting-and-how-does-it-work","text":"When syncing a conflict can occur when both the local and the remote file has been modified since the last sync. You then have four options: to skip the file, to use the newest file or to use either the local or the remote file. A conflict gets detected when both the local and remote modified time stamp for the file has changed since last sync - FolderSync could then of course just use the newest file, but then what if you had made some changes to the \"older\" file, that you wanted to save? A conflict will not be detected in cases where the modified time stamp is within the threshold for modified time stamp bug fix setting","title":"What is the conflict setting and how does it work?"},{"location":"faq/sync/#why-do-files-sometimes-get-transferred-even-if-they-havent-changes","text":"There is some kind of bug on some Android versions, where timestamps of files change independently of Foldersync, even if they haven't changed. It could be caused by media scanning the SD card, remounting or rebooting or perhaps issues with timezones but we do not know for sure. We don't have the problem on our test devices, and currently only a small subset of users have this problem. We are looking into handling this issue using md5 checksum to see if local files have changed before they are synced again. Look for it in a future release. If the timestamp of a remote file change, for whatever reason, even if the file is unchanged, then FolderSync will not be able to detect it and the file may be retransferrred.","title":"Why do files sometimes get transferred even if they haven't changes?"},{"location":"faq/sync/#why-is-there-no-overall-sync-progress-shown","text":"FolderSync's current sync engine progresses through the folder structure of the remote and local folders as they sync runs, and process each folder on its own. FolderSync doesn't know how many sub folders and files that may remain to be synced in folders not yet processed. It is perhaps possible to list all files/folders before syncing of changed files starts, but it may still take a long time to calculate this because it can depend on 1000's of web requests for large folder structures, and when no files are synced, this is essentially what happens anyway. Think about it like this: if you run a sync where no files are transferred, the time that the sync needs to run, is the same time as is needed to calculate the number files to be synced (if there had been any). So it doesn't make sense to show progress for syncs's where no files are transferred (because when the calculation is ready, the sync has completed). A future version of FolderSync may include a updated sync engine, where this calculation is done, and all files are transferred at the end of the sync. Then it will be possible to show how many file transfers remain in sync.","title":"Why is there no overall sync progress shown?"},{"location":"faq/sync/#when-are-modification-timestamps-for-files-updated","text":"Generally modified time stamp for a file is set on download and upload, not at any other time. However not all cloud providers or protocols support setting modified time stamp of uploaded files, so images that is uploaded may get a newer modified time stamp than on the device etc.. This table will illustrate which providers and protocols support setting the modification time stamp for an uploaded file: Provider/protocol Modification time stamp preserved Amazon S3 No Box No Dropbox No FTP Yes (if supported by server) Google Docs No Google Drive Yes NetDocuments No SFTP Yes (if supported by server) OneDrive No SMB/Cifs Yes (if supported by server) SugarSync No Ubuntu One No WebDAV No","title":"When are modification timestamps for files updated?"},{"location":"faq/sync/#why-are-my-files-not-being-synced-correctly","text":"This answer will try to address a range of common reasons why your files may not sync as you thought they would: If subfolders or some files are not syncing at all - make sure sync of subfolders is enabled. Also check if the files or folders not marked as hidden (in Google Docs this will happen if you choose to hide items from being shown in \"home\"). If so, enable sync of hidden files. Also make sure items are not excluded because of a sync filter. Connections - make sure the allowed connection type is enabled at the time the sync should run or else the folderpair will not be synced at all. FTP/FTPES - if you have problems with FTP syncing, please try the legacy option first before contacting support. Special characters in file names - please use universal acceptable file characters in file and folder names. Some good recommendations can be found here: http://www.mtu.edu/umc/services/web/resources/cms/characters-to-avoid.html Box doesn't accept file names or folders that start with a dot \".\".","title":"Why are my files not being synced correctly?"},{"location":"faq/sync/#foldersync-doesnt-delete-removed-files-in-a-two-way-sync-why","text":"FolderSync has a fairly simple sync engine, meaning that FolderSync doesn't store state for each individual file. Thus the only information it knows about a file is what it knows at the time of the sync. Thus, if you delete a previously synced file for a two-way sync folderpair on either the local or remote end, this file will be resynced, because FolderSync sees this a an unsynced file. This is intentional. Note: From version 1.4.0 on FolderSync support deletions in two-way sync.","title":"FolderSync doesn't delete removed files in a two-way sync. Why?"},{"location":"faq/sync/#foldersync-overwrite-changes-in-my-localremote-file-and-uses-the-oldest-file","text":"This can only happen if the rule \"overwrite always\" is used, or if you are experiencing the Android OS bug mentioned in the next question. If \"overwrite always\" is not set, FolderSync will never overwrite the newest file - but the bug mentioned results in the newest file having an older timestamp. See below for more details.","title":"FolderSync overwrite changes in my local/remote file and uses the oldest file?"},{"location":"faq/sync/#foldersync-sometimes-sync-files-that-havent-changed-why","text":"FolderSync compares the lastmodified timestamps on the local and the remote file when the option to overwrite older files in a folderpair is set. If the targetfile is older, it is overwritten by the sourcefile. AmazonS3 and Dropbox don't have any support for setting the timestamps of uploaded files, so when a file is uploaded to one of these services, FolderSync attempts to set the timestamp on the local file, to ensure the timestamps are in sync. Likewise when a file is downloaded, the timestamp of the localfile is set to that of the file in Dropbox or Amazon S3. This ensures, that on the next sync check FolderSync will see the files as identical. However, on some Android devices there is a bug in the operating system that makes setting the timestamp of the local file fail. Thus, at the next sync check, typcially when using two-way sync, FolderSync sees that the cloud and local file have different timestamps, and thus syncs the file again. This will then happen every time. From version 1.4.0 on the local and remote timestamp are stored in a database, and used for comparison at next sync. Along with an user configurable option to to ignore a timestamp difference, this should eliminate the resyncing problem. For information regarding the Android OS bug see these references: http://code.google.com/p/android/issues/detail?id=15480 http://code.google.com/p/android/issues/detail?id=1699 Even the official Dropbox app has the same problem: http://forums.dropbox.com/topic.php?id=22437","title":"FolderSync sometimes sync files that haven't changed. Why?"},{"location":"faq/sync/#sync-failing-because-of-file-conflicts","text":"If a file that has not been synced before, exists both locally and remote when syncing, and the two corresponding files do not have an identical modified timestamp, you will get a conflict. The same conflict will happen for a file that has been previously synced, if both the local and remote file changes since last sync (gets updated with a new timestamp and perhaps new content, by other applications or you). You can configure the folderpair to use the overwrite oldest file in such a case using the conflict setting under FolderPair->Advanced. The remote and local file may be identical, other than the timestamp, but FolderSync can not verify this without overwriting one of them with the other, since a file-hash of the remote file is often not available.","title":"Sync failing because of file conflicts"},{"location":"faq/sync/#bad-request-errors-or-failing-folderpairs","text":"Please try to re-authenticate account. In some cases you also need to re-select to remote folder for folderpairs, since the path structure on the remote end has changed because of usages of new API versions. Just re-select the folder you are already using, so the remote folder info can be refreshed.","title":"Bad request errors or failing folderpairs"},{"location":"faq/webdav/","text":"WebDAV 2FA access for NextCloud? To login on server with 2FA enabled you need to generate App Password / Token for your user, this password can then be used in FolderSync to login. See this article: https://help.nextcloud.com/t/how-to-connect-to-webdav-using-totp/7036/2 I can not connect to a non-HTTPS WebDav server. Why? Because of security restrictions when targeting newer Android SDK's non-SSL http communication is no longer allowed by default and will not be readded, as it would be a security risk for all users of the app, since it can enable man-in-the-middle attacks on compromised networks. This can not be configured as a user setting because of the way it configured in the app. It is recommended you enable SSL on your server or NAS, using the default self-signed SSL certificate it most likely has configured. FolderSync support self-signed certificates which can be enabled on account. If you absolutely have no other choice but to use a non-SSL server, please contact support to request the 2.9.x version FolderSync. Note, this old version is unsupported and will never receive updates. Upload fails with java.io.IOException: Stream Closed or similar? Some servers has a very low request time out setting. If you are using Apache webserver, many NAS like Synology or MyCloud are, you can remove usage of LoadModule reqtimeout_module modules/mod_reqtimeout.so in apache conf file. OwnCloud connection issues? May be caused by streamlining of the configuration into two account types for ownCloud 6/7 and 8 respectively. Please reconfigure your accounts accordingly. If you get something like \"refused stream\" error for HTTP/2 you need to upgrade to latest nginx web server and version 2.9.4, where this is fixed.","title":"WebDAV"},{"location":"faq/webdav/#webdav","text":"","title":"WebDAV"},{"location":"faq/webdav/#2fa-access-for-nextcloud","text":"To login on server with 2FA enabled you need to generate App Password / Token for your user, this password can then be used in FolderSync to login. See this article: https://help.nextcloud.com/t/how-to-connect-to-webdav-using-totp/7036/2","title":"2FA access for NextCloud?"},{"location":"faq/webdav/#i-can-not-connect-to-a-non-https-webdav-server-why","text":"Because of security restrictions when targeting newer Android SDK's non-SSL http communication is no longer allowed by default and will not be readded, as it would be a security risk for all users of the app, since it can enable man-in-the-middle attacks on compromised networks. This can not be configured as a user setting because of the way it configured in the app. It is recommended you enable SSL on your server or NAS, using the default self-signed SSL certificate it most likely has configured. FolderSync support self-signed certificates which can be enabled on account. If you absolutely have no other choice but to use a non-SSL server, please contact support to request the 2.9.x version FolderSync. Note, this old version is unsupported and will never receive updates.","title":"I can not connect to a non-HTTPS WebDav server. Why?"},{"location":"faq/webdav/#upload-fails-with-javaioioexception-stream-closed-or-similar","text":"Some servers has a very low request time out setting. If you are using Apache webserver, many NAS like Synology or MyCloud are, you can remove usage of LoadModule reqtimeout_module modules/mod_reqtimeout.so in apache conf file.","title":"Upload fails with java.io.IOException: Stream Closed or similar?"},{"location":"faq/webdav/#owncloud-connection-issues","text":"May be caused by streamlining of the configuration into two account types for ownCloud 6/7 and 8 respectively. Please reconfigure your accounts accordingly. If you get something like \"refused stream\" error for HTTP/2 you need to upgrade to latest nginx web server and version 2.9.4, where this is fixed.","title":"OwnCloud connection issues?"},{"location":"help/","text":"Help Coming soon.","title":"Debug logging"},{"location":"help/#help","text":"Coming soon.","title":"Help"},{"location":"mdm/","text":"Configuration deployment This document describes how to deploy configuration to individual FolderSync devices from a central server using a mobile device management (MDM) system. This functionality requires the Business edition of FolderSync Pro. How it works FolderSync can export a template JSON configuration file that can be distributed to end users. This will configured and maintaned by a superuser that can deploy files to the MDM system that manages the devices of the end users.","title":"Configuration deployment"},{"location":"mdm/#configuration-deployment","text":"This document describes how to deploy configuration to individual FolderSync devices from a central server using a mobile device management (MDM) system. This functionality requires the Business edition of FolderSync Pro.","title":"Configuration deployment"},{"location":"mdm/#how-it-works","text":"FolderSync can export a template JSON configuration file that can be distributed to end users. This will configured and maintaned by a superuser that can deploy files to the MDM system that manages the devices of the end users.","title":"How it works"},{"location":"mdm/deploy/","text":"Deploy configuration Deployment of JSON configuration file should be handled by the MDM. Consult your MDM documentation for guidance to how it supports writing files to storage of managed devices. When deploying the JSON file to end users, it should be put the internal storage folder which FolderSync will check. These JSON file locations are currently supported: <internalStoragePath>/Android/data/dk.tacit.android.foldersync.app/files/import/config.json <internalStoragePath>/FolderSync/import/config.json Note the name of the file: config.json","title":"Deploy configuration"},{"location":"mdm/deploy/#deploy-configuration","text":"Deployment of JSON configuration file should be handled by the MDM. Consult your MDM documentation for guidance to how it supports writing files to storage of managed devices. When deploying the JSON file to end users, it should be put the internal storage folder which FolderSync will check. These JSON file locations are currently supported: <internalStoragePath>/Android/data/dk.tacit.android.foldersync.app/files/import/config.json <internalStoragePath>/FolderSync/import/config.json Note the name of the file: config.json","title":"Deploy configuration"},{"location":"mdm/export/","text":"Creating configuration Before exporting a configuration file, accounts and folderPairs should be configured to exactly match what will end up on the end users devices. When exporting configuration later you can choose to omit login information so the end user will be asked for this on startup of the app. Accounts The path field on account allows for 1 or more placeholders contained in double curly brackets, which the end-user will also be asked for on startup. For example you can specify the following account path: /webdav/{{User ID}}/some/path{{Company Name}}/ The end user will then be asked to enter User ID and Company Name when attempting to login in the startup wizard, when this is shown on import, in addition to username and password. Note: When handing login on import wizard for the end user, the app will try to login for other accounts using the same server and account type, using the username and password provided. Ensure any folderPair with placeholders configured is at the top of the list, if another folderPair without placeholders can use the same account, so the end user has less hassle with entering credentials and can avoid enter same login multiple times. FolderPairs The local path field on folderPair allows for 1 placeholder contained in double curly brackets called ExternalSdCard which will transform to the users external SD card path on import. This will need to be manually edited in the JSON file. For example you can specify the following device path (remember forward slash after placeholder): {{ExternalSdCard}}/some/path This will then become something like this after import, if external SD card is found: /storage/6464-4544}/some/path Export configuration JSON To export the configuration file go to About->Settings->Export Configuration in the Business edition of foldersync. The JSON file will be written to the configured backup folder. When exporting, the option to include credentials is not selected. It is not recommended to include credentials other than for testing or for manual import use. There is also an update type which defaults to UpdateExisting. The options are described here: UpdateExisting (default) Updates properties of any existing accounts/folderPairs by importKey, else it will add new entries, other accounts/folderPairs are untouched. Will not update folderPairs/accounts that have been configured manually. OverwriteExisting Overwrites any existing accounts/folderPairs by importKey fully, else adds new entries, rest is untouched. RemoveAllExisting Removes all existing accounts/folderPairs, import all in file as new. FolderSync will delete the config.json file after import. AppendToExisting Don't touch existing accounts/folderPairs, import all as new. Editing the JSON file The JSON export file contains a description field, which content is shown in wizard and you can put some helpful text and a link in there if you need to point users to an online help guide. Also you will need to edit JSON file to use {{ExternalSdCard}} placeholder in SD card path field. { \"config\": { \"description\": \"Optional description goes here.\", \"updateType\": \"UpdateExisting\" } }","title":"Creating configuration"},{"location":"mdm/export/#creating-configuration","text":"Before exporting a configuration file, accounts and folderPairs should be configured to exactly match what will end up on the end users devices. When exporting configuration later you can choose to omit login information so the end user will be asked for this on startup of the app.","title":"Creating configuration"},{"location":"mdm/export/#accounts","text":"The path field on account allows for 1 or more placeholders contained in double curly brackets, which the end-user will also be asked for on startup. For example you can specify the following account path: /webdav/{{User ID}}/some/path{{Company Name}}/ The end user will then be asked to enter User ID and Company Name when attempting to login in the startup wizard, when this is shown on import, in addition to username and password. Note: When handing login on import wizard for the end user, the app will try to login for other accounts using the same server and account type, using the username and password provided. Ensure any folderPair with placeholders configured is at the top of the list, if another folderPair without placeholders can use the same account, so the end user has less hassle with entering credentials and can avoid enter same login multiple times.","title":"Accounts"},{"location":"mdm/export/#folderpairs","text":"The local path field on folderPair allows for 1 placeholder contained in double curly brackets called ExternalSdCard which will transform to the users external SD card path on import. This will need to be manually edited in the JSON file. For example you can specify the following device path (remember forward slash after placeholder): {{ExternalSdCard}}/some/path This will then become something like this after import, if external SD card is found: /storage/6464-4544}/some/path","title":"FolderPairs"},{"location":"mdm/export/#export-configuration-json","text":"To export the configuration file go to About->Settings->Export Configuration in the Business edition of foldersync. The JSON file will be written to the configured backup folder. When exporting, the option to include credentials is not selected. It is not recommended to include credentials other than for testing or for manual import use. There is also an update type which defaults to UpdateExisting. The options are described here: UpdateExisting (default) Updates properties of any existing accounts/folderPairs by importKey, else it will add new entries, other accounts/folderPairs are untouched. Will not update folderPairs/accounts that have been configured manually. OverwriteExisting Overwrites any existing accounts/folderPairs by importKey fully, else adds new entries, rest is untouched. RemoveAllExisting Removes all existing accounts/folderPairs, import all in file as new. FolderSync will delete the config.json file after import. AppendToExisting Don't touch existing accounts/folderPairs, import all as new.","title":"Export configuration JSON"},{"location":"mdm/export/#editing-the-json-file","text":"The JSON export file contains a description field, which content is shown in wizard and you can put some helpful text and a link in there if you need to point users to an online help guide. Also you will need to edit JSON file to use {{ExternalSdCard}} placeholder in SD card path field. { \"config\": { \"description\": \"Optional description goes here.\", \"updateType\": \"UpdateExisting\" } }","title":"Editing the JSON file"},{"location":"mdm/glossary/","text":"Glossary End user User which will use install FolderSync and sync files on their device. Superuser Administrative user with access to MDM system who will be responsible for deployment of configuration to end user devices.","title":"Glossary"},{"location":"mdm/glossary/#glossary","text":"End user User which will use install FolderSync and sync files on their device. Superuser Administrative user with access to MDM system who will be responsible for deployment of configuration to end user devices.","title":"Glossary"},{"location":"mdm/import/","text":"Import configuration When the end user opens the app and the app is able to find a configuration JSON file in a predfined location on internal storage, FolderSync will show an import wizard to the end user where they will be asked to login to any accounts found and enter any custom values specified in the account path. If credentials are in the config file or if the user has previously completed login for accounts found in the JSON file then no import wizard will be shown. Only configuration created as part of on import can be updated/overwritten by a new import. Manually created accounts/folderPairs will not be touched (unless updateType in JSON is configured to use update type RemoveAllExisting, in which case everything will be deleted). Checking for updates The app will check for a file each 12 hours (if running), and will then set to trigger the wizard on the next start if needed. File is always checked on a cold start of the app.","title":"Import configuration"},{"location":"mdm/import/#import-configuration","text":"When the end user opens the app and the app is able to find a configuration JSON file in a predfined location on internal storage, FolderSync will show an import wizard to the end user where they will be asked to login to any accounts found and enter any custom values specified in the account path. If credentials are in the config file or if the user has previously completed login for accounts found in the JSON file then no import wizard will be shown. Only configuration created as part of on import can be updated/overwritten by a new import. Manually created accounts/folderPairs will not be touched (unless updateType in JSON is configured to use update type RemoveAllExisting, in which case everything will be deleted).","title":"Import configuration"},{"location":"mdm/import/#checking-for-updates","text":"The app will check for a file each 12 hours (if running), and will then set to trigger the wizard on the next start if needed. File is always checked on a cold start of the app.","title":"Checking for updates"}]}